<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>AMApplicationBuild</key>
	<string>520</string>
	<key>AMApplicationVersion</key>
	<string>2.10</string>
	<key>AMDocumentVersion</key>
	<string>2</string>
	<key>actions</key>
	<array>
		<dict>
			<key>action</key>
			<dict>
				<key>AMAccepts</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Optional</key>
					<true/>
					<key>Types</key>
					<array>
						<string>com.apple.applescript.object</string>
					</array>
				</dict>
				<key>AMActionVersion</key>
				<string>1.0.2</string>
				<key>AMApplication</key>
				<array>
					<string>Automator</string>
				</array>
				<key>AMParameterProperties</key>
				<dict>
					<key>source</key>
					<dict/>
				</dict>
				<key>AMProvides</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Types</key>
					<array>
						<string>com.apple.applescript.object</string>
					</array>
				</dict>
				<key>ActionBundlePath</key>
				<string>/System/Library/Automator/Run AppleScript.action</string>
				<key>ActionName</key>
				<string>Run AppleScript</string>
				<key>ActionParameters</key>
				<dict>
					<key>source</key>
					<string>-- Apple Notes Exporter version 1.0-- By Johan Sanneblad-- Exports all Apple Notes in folders with filename "&lt;creation date&gt; &lt;title&gt; [&lt;id&gt;]"set exportFolder to (choose folder) as string-- Simple text replacingon replaceText(find, replace, subject)	set prevTIDs to text item delimiters of AppleScript	set text item delimiters of AppleScript to find	set subject to text items of subject		set text item delimiters of AppleScript to replace	set subject to "" &amp; subject	set text item delimiters of AppleScript to prevTIDs		return subjectend replaceText-- Returns an HTML file to save the note in.  We have to escape-- the colons or AppleScript gets upset.-- noteContainer must end with ":"on noteNameToFilePath(noteContainer, noteName)	global exportFolder	set strLength to the length of noteName		if strLength &gt; 250 then		set noteName to text 1 thru 250 of noteName	end if		set noteFolder to exportFolder &amp; noteContainer		-- Create folder if it does not exist	set outputFolder to POSIX path of (noteFolder as text)	do shell script "mkdir -p " &amp; quoted form of outputFolder		set fileName to (noteFolder &amp; replaceText(":", "_", noteName) &amp; ".html")	return fileNameend noteNameToFilePathtell application "Notes"		repeat with theNote in notes of default account				set noteLocked to password protected of theNote as boolean		set noteModificationDate to modification date of theNote as date		set noteCreationDate to creation date of theNote as date				set noteID to id of theNote as string		set oldDelimiters to AppleScript's text item delimiters		set AppleScript's text item delimiters to "/"		set theArray to every text item of noteID		set AppleScript's text item delimiters to oldDelimiters		set noteFolder to ""				if length of theArray &gt; 4 then			-- the last part of the string should contain the ID			-- e.g. x-coredata://39376962-AA58-4676-9F0E-6376C665FDB6/ICNote/p599			set noteID to item 5 of theArray		else			set noteID to ""		end if				if not noteLocked then						set theText to body of theNote as string			set theContainer to container of theNote						try				repeat while theContainer is not missing value					set noteFolder to (name of theContainer) &amp; ":" &amp; noteFolder					set theContainer to (container of theContainer)				end repeat			end try						-- prefix all notes by creation date (YYY-MM-DD)			set yy to (year of noteCreationDate as text)			-- set yy to text -2 through -1 of (year of noteCreationDate as text)			set mm to text -2 through -1 of ("0" &amp; (month of noteCreationDate as integer))			set dd to text -2 through -1 of ("0" &amp; (day of noteCreationDate))			set datePrefix to yy &amp; mm &amp; dd						-- file name composed by creation date + note title + id (to prevent overwriting files from the same date with same title)			set fileName to ((datePrefix &amp; " " &amp; name of theNote as string) &amp; " [" &amp; noteID &amp; "]") as string			set filepath to noteNameToFilePath(noteFolder, fileName) of me			set noteFile to open for access filepath with write permission						write theText to noteFile as «class utf8» -- if you want UTF-16 replace this with "as Unicode text"						close access noteFile						tell application "Finder"				set modification date of file (filepath) to noteModificationDate			end tell		end if			end repeat	end tell</string>
				</dict>
				<key>BundleIdentifier</key>
				<string>com.apple.Automator.RunScript</string>
				<key>CFBundleVersion</key>
				<string>1.0.2</string>
				<key>CanShowSelectedItemsWhenRun</key>
				<false/>
				<key>CanShowWhenRun</key>
				<true/>
				<key>Category</key>
				<array>
					<string>AMCategoryUtilities</string>
				</array>
				<key>Class Name</key>
				<string>RunScriptAction</string>
				<key>InputUUID</key>
				<string>BCEA1091-2B62-4C55-A08C-C1E8A112B376</string>
				<key>Keywords</key>
				<array>
					<string>Run</string>
				</array>
				<key>OutputUUID</key>
				<string>2DE6F6DC-46F4-4E94-96C3-40E03E8E55B2</string>
				<key>UUID</key>
				<string>938F6722-BF51-4248-B3E0-34F5B3D947CB</string>
				<key>UnlocalizedApplications</key>
				<array>
					<string>Automator</string>
				</array>
				<key>arguments</key>
				<dict>
					<key>0</key>
					<dict>
						<key>default value</key>
						<string>on run {input, parameters}
	
	(* Your script goes here *)
	
	return input
end run</string>
						<key>name</key>
						<string>source</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>0</string>
					</dict>
				</dict>
				<key>isViewVisible</key>
				<integer>1</integer>
				<key>location</key>
				<string>525.500000:1575.000000</string>
				<key>nibPath</key>
				<string>/System/Library/Automator/Run AppleScript.action/Contents/Resources/Base.lproj/main.nib</string>
			</dict>
			<key>isViewVisible</key>
			<integer>1</integer>
		</dict>
	</array>
	<key>connectors</key>
	<dict/>
	<key>workflowMetaData</key>
	<dict>
		<key>workflowTypeIdentifier</key>
		<string>com.apple.Automator.workflow</string>
	</dict>
</dict>
</plist>
